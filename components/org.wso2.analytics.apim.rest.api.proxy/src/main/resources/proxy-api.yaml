swagger: '2.0'
###########################################################################
# Prolog
###########################################################################
info:
  version: "v1.0"
  title: "WSO2 Analytics for API Manager"
  description: |
    This document specifies a **RESTful API** for WSO2 Analytics for **API Manager** .

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "https://github.com/wso2/analytics-apim/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

###########################################################################
# The fixed parts of the URLs of the API
###########################################################################

# The schemes supported by the API
schemes:
  - https
  - http

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.wso2.com

# The base path of the API.
# Will be prefixed to all paths.
basePath: /analytics-dashboard/apis/analytics/v1.0

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json

###########################################################################
# The resource API to retrieve the APIs list from the APIM server
###########################################################################
paths:
  /apim/apis:

    #--------------------------------------------------------------------------
    # Retrieve APIs list from the APIM server
    #--------------------------------------------------------------------------
    get:
      summary: |
        Retrieve the APIs list
      description: |
        Retrieve the APIs list from the APIM server
      responses:
        200:
          description: |
            Ok.
            REST API url successfully retrieved.
          schema:
            $ref: '#/definitions/APIList'
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'

  ###########################################################################
  # The resource API to retrieve the Applications list from the APIM server
  ###########################################################################
  /apim/applications:

    #--------------------------------------------------------------------------
    # Retrieve Applications list from the APIM server
    #--------------------------------------------------------------------------
    get:
      summary: |
        Retrieve the Applications list
      description: |
        Retrieve the Applications list from the APIM server
      responses:
        200:
          description: |
            Ok.
            REST API url successfully retrieved.
          schema:
            $ref: '#/definitions/ApplicationList'
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'

  /appinfo/{appname}:

    #--------------------------------------------------------------------------
    # Retrieve Applications list from the APIM server
    #--------------------------------------------------------------------------
    get:
      summary: |
        Retrieve the Applications list
      description: |
        Retrieve the Applications list from the APIM server
      parameters:
        - name: appname
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
      responses:
        200:
          description: |
            Ok.
            REST API url successfully retrieved.
          schema:
            $ref: '#/definitions/ApplicationList'
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
###########################################################################
# The resources used by some of the APIs above within the message body
###########################################################################
definitions:

  #--------------------------------------------------------------------------
  # The API List resource
  #--------------------------------------------------------------------------
  APIList:
    title: API List
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/APIInfo'
    example:
      list:
        - id: 01234567-0123-0123-0123-012345678901
          name: CalculatorAPI
          version: 1.0.0
          provider: admin
        - id: 01123567-1233-5453-0212-12353678901
          name: PizzaShackAPI
          version: 1.0.0
          provider: admin

  #--------------------------------------------------------------------------
  # The API Info resource
  #--------------------------------------------------------------------------
  APIInfo:
    title: API Info object with basic API details.
    properties:
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: CalculatorAPI
      version:
        type: string
        example: 1.0.0
      provider:
        description: |
          If the provider value is not given, the user invoking the API will be used as the provider.
        type: string
        example: admin

  #--------------------------------------------------------------------------
  # The Application List resource
  #--------------------------------------------------------------------------
  ApplicationList:
    title: Application List
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/ApplicationInfo'

  #--------------------------------------------------------------------------
  # The Application Info resource
  #--------------------------------------------------------------------------
  ApplicationInfo:
    title: Application info object with basic application details
    properties:
      applicationId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: CalculatorApp
      owner:
        type: string
        example: admin

  #--------------------------------------------------------------------------
  # The Application List resource
  #--------------------------------------------------------------------------
  UserClaimList:
    title: UserClaim List
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/UserClaim'

  #--------------------------------------------------------------------------
  # The Application Info resource
  #--------------------------------------------------------------------------
  UserClaim:
    title: UserClaim info object
    properties:
      name:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      value:
        type: string
        example: CalculatorApp

  #--------------------------------------------------------------------------
  # The Error resource
  #--------------------------------------------------------------------------
  Error:
    title: Error object returned with 4XX HTTP lifeCycleStatus
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
        description: Error message.
      description:
        type: string
        description: |
          A detail description about the error message.
      moreInfo:
        type: string
        description: |
          Preferably an url with more details about the error.
      error:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

  #--------------------------------------------------------------------------
  # The Error List Item resource
  #--------------------------------------------------------------------------
  ErrorListItem:
    title: Description of individual errors that may have occurred during a request.
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
        description: |
          Description about individual errors occurred
#--------------------------------------------------------------------------
# END-OF-FILE
#--------------------------------------------------------------------------
